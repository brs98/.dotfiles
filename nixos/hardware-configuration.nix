# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "thunderbolt" "usb_storage" "usbhid" "sd_mod" "amdgpu" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  # Use latest kernel for AMD 7040 series support (minimum 6.12)
  boot.kernelPackages = pkgs.linuxPackages_latest;
  
  # Kernel parameters for Framework AMD optimization and display troubleshooting
  boot.kernelParams = [
    "amd_pstate=guided"      # Better AMD CPU power management
    "amdgpu.dc=1"           # Enable Display Core for better graphics
    "amdgpu.dpm=1"          # Enable dynamic power management
    "amdgpu.gpu_recovery=1" # Enable GPU recovery on hangs
    # Debugging parameters (remove after fixing)
    "drm.debug=0x14"        # Enable DRM debugging
    "amdgpu.debug=0x4000"   # Enable AMDGPU debugging
    "initcall_debug=1"      # Debug early initialization
    # Emergency fallback options (uncomment if needed)
    # "nomodeset"           # Disable kernel mode setting (fallback)
    # "amdgpu.modeset=0"    # Disable AMDGPU modesetting (fallback)
  ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/a9f83b66-6dbd-4be4-af6e-8cee81a2e732";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/7078-4220";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  
  # CPU microcode updates (other hardware config in configuration.nix)
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
